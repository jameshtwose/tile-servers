services:
  redis:
    image: redis:latest
    container_name: tegola-redis
    ports:
      - 6379:6379

  database:
    image: postgis/postgis:13-3.1-alpine
    container_name: postgis
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d bonn"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: bonn
    ports:
      - 5432:5432

  migration:
    image: postgis/postgis:13-3.1-alpine
    container_name: migration
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./data:/data
    environment:
      PGUSER: postgres
      PGPASSWORD: postgres
    command:
      - /bin/bash
      - -c
      - |
        tar -xzf /data/bonn_example.tar.gz -C /data
        bash /data/init.sh

  tegola-mvt-postgis-provider:
    image: gospatial/tegola:v0.16.0
    container_name: tegola-mvt-postgis-provider
    depends_on:
      database:
        condition: service_healthy
    restart: "unless-stopped"
    ports:
      - 8080:8080
    volumes:
      - ./config:/data
    command: >
      serve --config /data/config-mvt-postgis.toml
    environment:
      DB_HOST: database
      DB_PORT: 5432
      DB_NAME: bonn
      DB_USER: postgres
      DB_PASSWORD: postgres
      TEGOLA_POSTGIS_SSL: disable
      TEGOLA_REDIS_SSL: false
      REDIS_HOST: redis:6379
      REDIS_PASSWORD: ""
      TEGOLA_SQL_DEBUG: LAYER_SQL

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    pull_policy: if_not_present
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
       - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    # networks:
    #   - database
    restart: unless-stopped

volumes:
  pgadmin: